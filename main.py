import os
import json
from dotenv import load_dotenv

from langchain_openai import ChatOpenAI
from langchain.chains import LLMChain
from langchain.prompts import PromptTemplate

load_dotenv(".env")


def analyze_code(input_code, input_cve):
    # create a prompt template
    template = """
    You are a helpful AI assistant that is an expert at analysing security vulnerabilities in code. 
    You answer truthfully and say "I don't know" when questions are difficult for you to answer. 
    You think carefully, step by step, to avoid making mistakes. 
    You are helpful, offering suggestions to improve insecure code.

    This is the code: {user_code}
    This is the description: {user_description}

    As an Ai you should be able to format your response similar to the example below:

    Example Response:
    User: Use the description of CVE-2024-1215 to analyse whether the following code snippet is vulnerable. 
    Think step by step to avoid making mistakes. 

    Description: A vulnerability was found in SourceCodester CRUD without Page Reload 1.0. 
    It has been rated as problematic. Affected by this issue is some unknown functionality of the file fetch_data.php. 
    The manipulation of the argument username/city leads to cross site scripting. 
    The attack may be launched remotely. The exploit has been disclosed to the public and may be used. 
    VDB-252782 is the identifier assigned to this vulnerability.

    Code: <?php
    $username = $_GET['username'];
    $city = $_GET['city'];
    $userData = [
        'username' => 'John',
        'city' => 'New York',
        // Other user data...
    ];
    echo "User Data:<br>";
    echo "Username: " . $userData['username'] . "<br>";
    echo "City: " . $userData['city'] . "<br>";
    echo "<script>alert('XSS Vulnerability');</script>"; // Vulnerable line
    ?>

    Reasoning: The vulnerability described in the CVE-2024-1215 could potentially be present in the code 
    if it uses the vulnerable version of the log4j library (version 5.4.2). The CVE description mentions 
    that the vulnerability exists in version 5.4.2 of the log4j library, and it's related to log4j's functionality.
    If the code sample uses log4j version 5.4.2, it would be vulnerable to CVE-2024-1215. The code sample does not indicate which version of the log4j library is used. 
    The CVE description indicates that version 5.4.2 of the library is vulnerable to CVE-2024-1215. 
    The CVE description mentions that version log4j 5.4.3 or higher has been patched to avoid the vulnerability. 

    Answer: The code sample is vulnerable to CVE-2024-1215 if log4j version 5.4.2 is being used. 
    Ensure log4j version 5.4.3 or higher is used to avoid this vulnerability.
    """
    prompt = PromptTemplate(input_variables=['user_code', 'user_description'], template=template)
    llm = ChatOpenAI()

    # create and run a chain
    chain = LLMChain(prompt=prompt, llm=llm)
    user_code = input_code
    with open('./cve_details.json', 'r') as json_file:
        data = json.load(json_file)
        user_description = data.get(input_cve)
        # print(f"debgugging: {user_description}")

    out = chain.invoke({'user_code': user_code, 'user_description': user_description})
    return out["text"]
